# Updated makefile
CC = gcc

# Define the source files
SRC = main.c school.c

# Define the object files
OBJ = $(SRC:.c=.o)

# Define the name of the executable
NAME = school

# Define the command to remove files
RM = rm -f

# Define the compiler flags
CFLAGS = -Wall -Werror -Wextra -pedantic

# The 'all' rule builds the target executable
all: $(NAME)

# Rule to build the target executable from object files
$(NAME): $(OBJ)
	$(CC) $(CFLAGS) -o $(NAME) $(OBJ)

# Pattern rule to build object files from source files
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Rule to clean up Emacs and Vim temporary files along with the executable
clean:
	$(RM) *~ \#* $(NAME)

# Rule to clean up only object files
oclean:
	$(RM) $(OBJ)

# Rule to clean up everything: temporary files, object files, and the executable
fclean: clean oclean

# Rule to force recompilation of all source files
re: fclean all

# Phony targets
.PHONY: all clean oclean fclean re
